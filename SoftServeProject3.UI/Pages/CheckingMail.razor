@page "/checking_mail"
@inject HttpClient Http
@inject NavigationManager Navigation
@using SoftServeProject3.Core.DTOs;




<head>
    <PageTitle>Checking mail</PageTitle>
</head>


<body>
    <div class="form">
        <h3>Скидання паролю</h3>

        <div class="email">
            @if (!showCodeInput)
            {
                <EditForm Model="@emailData" OnValidSubmit="@SendCode">
                    <DataAnnotationsValidator />
                    <label>E-mail:</label>
                    <InputText @bind-Value="emailData.EmailTo" type="email" placeholder="Введіть ваш E-mail" />
                    <ValidationMessage For="@(()=>emailData.EmailTo)" />
                    <button type="submit">Відправити код</button>
                </EditForm>
            }
        </div>
        <div class="email">

            @if (showCodeInput)
            {
                <p class="codesent"><b>Код було відправлено на @emailData.EmailTo.</b></p>
                <p class="codesent"><b>Будь ласка перевірте пошту.</b></p>
                <EditForm Model="@forgotPassword" OnValidSubmit="@VerifyCode">
                    <label>Поле для коду:</label>
                    <InputText @bind-Value="forgotPassword.Code" placeholder="Введіть ваш код" />
                    <button type="submit">Скинути пароль</button>
                </EditForm>
                <button @onclick="SendCode">Відправити код знову</button>

            }
        </div>
    </div>






    <p>@errorMessage</p>
    @code {
        private bool showCodeInput = false;
        private string errorMessage = "";

        

        /// <summary>
        /// Відправляє запит на сервер для отримання коду верифікації на електронну пошту користувача.
        /// </summary>

        EmailDataModel emailData = new EmailDataModel();
        ForgotPasswordModel forgotPassword = new ForgotPasswordModel();

        private async Task SendCode()
        {
            var isResetQueryParam = "?isReset=true";
            var response = await Http.PostAsJsonAsync("https://localhost:7292/Email/SendVerificationCodePassword" + isResetQueryParam, emailData);

            if (!response.IsSuccessStatusCode)
                errorMessage = await response.Content.ReadAsStringAsync();
            else
            {
                showCodeInput = true;
                errorMessage = "";
            }

        }

        /// <summary>
        /// Перевіряє введений користувачем код та здійснює подальші дії на основі результату перевірки.
        /// </summary>
        private async Task VerifyCode()
        {
            forgotPassword.Email = emailData.EmailTo;
            var response = await Http.PostAsJsonAsync($"https://localhost:7292/Email/VerifyCodeEmail", forgotPassword);

            if (response.IsSuccessStatusCode)
            {
                errorMessage = "";
                Navigation.NavigateTo($"/reset-password?code={BCrypt.Net.BCrypt.HashPassword(forgotPassword.Code)}");
            }
            else
            {
                var content = await response.Content.ReadAsStringAsync();
                if (!content.Contains("The Code field is required."))
                    errorMessage = content;
            }
        }
    }
</body>
