@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
<link rel="stylesheet" href="Login.razor.css">
@inject TokenService TokenService
@using SoftServeProject3.UI.Data
@using Microsoft.AspNetCore.WebUtilities;

<head>
    <PageTitle>Log In</PageTitle>
</head>

<body>
    <div class="form">
        <h3>Вхід</h3>
        <div class="email">
            <label>Email/UserName:</label>
            <input @bind="emailOrUsername" type="text" placeholder="Введіть ваш Email/UserName" />


            <label>Password:</label>
            <input @bind="password" type="password" placeholder="Введіть ваш пароль" />

            <button @onclick="AttemptLogin">Увійти</button>
            <button @onclick="StartGoogleLogin">Login with Google</button> 

        </div>
    </div>

    <p>@errorMessage</p>

    <div class="registration-link">
        <p>Ще не зареєстровані? <a href="/RegistrationPage">Зареєструватися</a></p>
    </div>

    <div class="forgot-password-link">
        <p>Забули пароль? <a href="/checking_mail">Скидання паролю</a></p>
    </div>
</body>

@code {
    
    private string emailOrUsername = "";
    private string password = "";
    private string errorMessage = "";

    private async Task AttemptLogin()
    {
        var isEmail = emailOrUsername.Contains("@") && emailOrUsername.Contains(".");

        var loginRequest = new
        {
            Username = isEmail ? "" : emailOrUsername,
            Email = isEmail ? emailOrUsername : "",
            Password = password,
        };

        var response = await Http.PostAsJsonAsync("https://localhost:7292/Users/login", loginRequest);

        var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
        if (result != null && !string.IsNullOrEmpty(result.Token))
        {
            await TokenService.StoreToken(result.Token);
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Login failed. Please check your email and password.";
        }
    }


    public class LoginResponse
    {
        public string Token { get; set; }
    }
    private void ForgotPassword()
    {
        
    }

    
    private void StartGoogleLogin()
    {
        
        Navigation.NavigateTo("https://localhost:7292/Users/login/google", forceLoad: true);
    }
    
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Navigation.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token))
        {
            await TokenService.StoreToken(token.ToString());
            Navigation.NavigateTo("/", forceLoad: true); 
        }
    }
}

