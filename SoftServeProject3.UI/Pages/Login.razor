@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject TokenService TokenService
@using SoftServeProject3.UI.Data
@using Microsoft.AspNetCore.WebUtilities;
@using SoftServeProject3.UI.Services;

@if (!isUserAuthenticated)
{
    <head>
        <PageTitle>Log In</PageTitle>
        <script src="https://accounts.google.com/gsi/client" async defer></script>
    </head>

    <body>
        <div class="form">
            <h3>Вхід</h3>
            <div class="email">
                <label>Email/UserName:</label>
                <input @bind="emailOrUsername" type="text" placeholder="Введіть ваш Email/UserName" />


                <label>Password:</label>
                <input @bind="password" type="password" placeholder="Введіть ваш пароль" />

                <button @onclick="AttemptLogin">Увійти</button>
                <div id="g_id_onload"
                     data-client_id="357565124142-s9gtqe39vomlthcsqgorb32ltq65i3o8.apps.googleusercontent.com"
                     data-ux_mode="redirect"
                     data-login_uri="https://localhost:7292/Users/login/google">
                </div>
                <div class="g_id_signin" data-type="standard"></div>

            </div>
        </div>

        <p>@errorMessage</p>

        <div class="registration-link">
            <p>Ще не зареєстровані? <a href="/RegistrationPage">Зареєструватися</a></p>
        </div>

        <div class="forgot-password-link">
            <p>Забули пароль? <a href="/checking_mail">Скидання паролю</a></p>
        </div>
    </body>
}
else
{
    Navigation.NavigateTo("/");
}
@code {

    private string emailOrUsername = "";
    private string password = "";
    private string errorMessage = "";
    private bool isUserAuthenticated;
    /// <summary>
    /// Спроба авторизації користувача з використанням його електронної пошти/імені користувача та пароля.
    /// </summary>
    private async Task AttemptLogin()
    {
        var isEmail = emailOrUsername.Contains("@") && emailOrUsername.Contains(".");

        var loginRequest = new
        {
            Username = isEmail ? "" : emailOrUsername,
            Email = isEmail ? emailOrUsername : "",
            Password = password,
        };

        var response = await Http.PostAsJsonAsync("https://localhost:7292/Users/login", loginRequest);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            if (result != null && !string.IsNullOrEmpty(result.Token))
            {
                await TokenService.StoreToken(result.Token);
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Login failed. Please check your email and password.";
            }
        }
        else
        {
            errorMessage = "Login failed. Please check your email and password.";
        }

    }



    public class LoginResponse
    {
        public string Token { get; set; }
    }

 

    /// <summary>
    /// Викликається під час ініціалізації сторінки.
    /// </summary>
    /// private bool isUserAuthenticated;
    private async Task<bool> IsUserAuthenticatedAsync()
    {
        var token = await TokenService.GetToken();
        return TokenService.IsTokenValid(token);


    }

    protected override async Task OnInitializedAsync()
    {
        isUserAuthenticated = await IsUserAuthenticatedAsync();
        if (!isUserAuthenticated)
        {
            var uri = new Uri(Navigation.Uri);

            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token))
            {
                await TokenService.StoreToken(token.ToString());
                Navigation.NavigateTo("/", forceLoad: true);
            }
        }
        else
        {
            errorMessage = "Failed to load user info";
            
        }
        
    }
}

    
