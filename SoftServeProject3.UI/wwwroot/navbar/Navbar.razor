@inject HttpClient Http
@inject TokenService TokenService
@inject NavigationManager Navigation
@inject UserProfileService UserProfileService
@using SoftServeProject3.UI.Services;
@using SoftServeProject3.UI.Pages;
@using System.Globalization
@using Newtonsoft.Json;
@using SoftServeProject3.Core.DTOs;
@using System.Net.Http.Headers;
<style>
    .wrapper {
    max-width: 940px;
    margin: 0 auto;
}

    .wrapper > div {
        border-radius: 5px;
        padding: 1em;
    }

.wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 10px;
    grid-auto-rows: minmax(100px, auto);
}

    .one {
        grid-column: 1 / 4;
        grid-row: 1;
        list-style: none;
        background-color: #b3b3b3;
        color: white;
        display: flex;
        justify-content: space-between;
        padding: 40px 20px;
    }

    .one a {
        background-color: #757575;
        display: inline-block;
        border: 10px solid #757575;
        border-radius: 5px;
        color: white;
        text-decoration: none;
        margin: 0 15px;
        padding: 0px 5px;
    }

    .one a:hover {
        background-color: peru;
        border: 10px solid peru;
    }

    .left-links a:first-child {
        margin-left: 0;
    }

    .right-links a:last-child {
        margin-right: 0;
    }

    .profile-picture {
        background-color: pink;
        width: 20vh;
        height: 20vh;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 20px; /* Перенесено до профільного зображення для зручності */
    }

        .profile-picture img {
            width: 100%;
            height: 100%;
        }

    .friend-requests-indicator {
        background-color: red;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.8em;
        margin-left: 5px;
    }
</style>


    <div class="one">
        <div class="left-links">
            <a href="MainPage">Home</a>
            <a href="UserSearch">Search</a>
            <a href="MainPage">Friends</a>
        </div>
        <div class="right-links">
        <button @onclick="ShowMessagePopup">
            Повідомлення @if (incomingRequests?.Any() == true)
            {
                <span class="friend-requests-indicator">@incomingRequests.Count</span>
            }
        </button>
            @if (showMessagePopup)
            {
                <MessagePopupComponent IsVisible="@showMessagePopup" OnClose="HandleClose" />
            }
            <a href="UserProfile">Профіль</a>
        </div>
    </div>

@code {
    string errorMessage;
    List<Friend> incomingRequests = new List<Friend>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
                var token = await TokenService.GetToken();
                Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
                incomingRequests = await Http.GetFromJsonAsync<List<Friend>>("https://localhost:7292/Users/friends/incomingRequests");
                errorMessage = "Failed to load user info";
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
    private bool showMessagePopup = false;

    private void ShowMessagePopup()
    {
        showMessagePopup = true;

    }
    private void HandleClose(bool isClosed)
    {
        showMessagePopup = false;
    }
}
